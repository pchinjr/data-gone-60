AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Data Gone in 60 Seconds - Data Ingestion SAM Project with API Key Protection
  Receives POSTed metric batches, writes date‚Äêpartitioned JSON lines to S3,
  runs Athena queries by date, and dispatches results via SQS + external HTTP.

Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 30

Resources:
  RawDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: datagonein60-rawdata

  DataIngestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        ApiKeyRequired: true
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          LoggingLevel: INFO
          DataTraceEnabled: true

  DataIngestFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: ingestData.handler
      CodeUri: src/
      Environment:
        Variables:
          BUCKET_NAME: !Ref RawDataBucket
      Events:
        IngestAPI:
          Type: Api
          Properties:
            RestApiId: !Ref DataIngestApi
            Path: /ingest
            Method: post
      Policies:
        - S3WritePolicy:
            BucketName: !Ref RawDataBucket
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/ingestData.ts

  IngestApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: IngestApiKey
      Enabled: true

  IngestUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    DependsOn: DataIngestApiProdStage
    Properties:
      UsagePlanName: IngestUsagePlan
      ApiStages:
        - ApiId: !Ref DataIngestApi
          Stage: Prod

  IngestUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref IngestApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref IngestUsagePlan

  ProcessedDataQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ProcessedDataQueue

  AthenaQueryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: runAthenaQuery.handler
      CodeUri: src/
      Environment:
        Variables:
          ATHENA_DATABASE:       my_athena_database
          ATHENA_TABLE:          my_raw_data_table
          ATHENA_OUTPUT_LOCATION: s3://datagonein60-rawdata/transformed/
          SQS_QUEUE_URL:         !GetAtt ProcessedDataQueue.QueueUrl
          QUERY_YEAR:            "2025"
          QUERY_MONTH:           "02"
          QUERY_DAY:             "10"
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - athena:StartQueryExecution
                - athena:GetQueryExecution
                - athena:GetQueryResults
              Resource: "*"
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: !GetAtt ProcessedDataQueue.Arn
            - Effect: Allow
              Action:
                - s3:ListBucket
                - s3:GetBucketLocation
                - s3:GetObject
              Resource:
                - !Sub arn:aws:s3:::${RawDataBucket}
                - !Sub arn:aws:s3:::${RawDataBucket}/*
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/runAthenaQuery.ts

  SendToExternalBatchFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: sendToExternalBatch.handler
      CodeUri: src/
      Environment:
        Variables:
          EXTERNAL_ENDPOINT_URL: "https://api.val.town/data-warehouse"
      Events:
        SQSTrigger:
          Type: SQS
          Properties:
            Queue: !GetAtt ProcessedDataQueue.Arn
            BatchSize: 10
            MaximumBatchingWindowInSeconds: 10
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/sendToExternalBatch.ts

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL for the Data Ingest Function"
    Value: !Sub "https://${DataIngestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/ingest"
  ApiKey:
    Description: "API Key for accessing the Data Ingest API"
    Value: !Ref IngestApiKey
